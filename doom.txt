theme = {}
theme.warning = "red"
theme.text = "white"
theme.notify="green"

mx = include_lib("/lib/metaxploit.so")
cr = include_lib("/lib/crypto.so")

r=get_router()





//Server configuration information

ip = "25.224.104.199"
port = 22
username = "root"
password = "pizza"

doom_version = "0.1"

// end


ask = function(q,yes,no)
	
	print(q+"\n"+yes+"/"+no+"\n")
	s=user_input
	if s==yes then
		return true
	end if
	if s==no then
		return false
	end if
	
	return false //If they just put 'a' or something
end function


color = function(mode,text)
	print("<color="+theme[mode]+">"+text+"</color>")
end function

color("text","Welcome to Doom\n")
color("text","One moment..")

s = get_shell
server = s.connect_service(ip,port,username,password)

if not typeof(server) == "shell" then
	print("Doom's servers are currently down for maintenance")
	exit()
end if

color("notify","Successfully connected too the server!")

print("Please either <color=blue>login</color> or <color=blue>register</color> or <color=red>rewhitelist</color>\n")
said = user_input()

if said == "rewhitelist" then
	print("This feature changes the IP tied to a account")
	print("incase you get caught by the authorities and are assigned a new ip")
	print("please enter your username:")
	uname = user_input("name:")
	print("please enter your master password:")
	mpass = user_input("masterkey:")
	for user in server.host_computer.File("/Doom/Users").get_files
		if user.name == uname then
			c=user.content.split(":")
			
			if mpass == c[3] then
				print("Enter your old IP:")
				old = user_input()
				user.set_content(user.content.replace(old,get_router.public_ip))
				color("notify","Rewhitelisted!")
			end if
			
			
		end if
	end for
	
	
end if


if said == "register" then
	print("Your IP will be needed too further continue making a account")
	ques = ask("Can I have your IP\n","yes","no")
	
	
	if not ques then
		exit("account registration failed: your ip is required")
	end if
	
	if not server.host_computer.File("/Doom/blacklisted") == null then
		if not server.host_computer.File("/Doom/blacklisted").content.indexOf(get_router.public_ip) == null then
			color("warning","This IP is suspended from doom")
			exit()
		end if
	end if
	
	
	print("Please enter a master password")
	print("This password is used if you ever need too whitelist your new machine")
	masterpass = user_input("password:")
	
	color("warning","Sharing accounts is not allowed\n")
	color("warning","Accounts are tied by IP\n")
	color("warning","NEVER give someone your login\n")
	
	getname = function()
		username = user_input("username:")
		return username
	end function
	
	namee = getname
	
	ip = get_router().public_ip
	
	if server.host_computer.File("/Doom/Users") == null then
		exit("Unknown error")
	end if
	
	for user in server.host_computer.File("/Doom/Users").get_files
		if user.name == namee then
			print("account registration failed: name is taken")
			exit()
		end if
	end for
	
	
	server.host_computer.touch("/Doom/Users",namee)
	server.host_computer.File("/Doom/Users/"+namee).set_content(ip+":no:no:"+masterpass)
	
	color("notify","Registration success!")
	
end if

computerex = function(comp)
end function

shellex = function(shell)	
end function



hack = function(ip,port)
	
	r=get_router(ip)
	
	netsess = mx.net_use(ip,port)
	
	lib = netsess.dump_lib
	addrs = mx.scan(lib)
	
	exhandler = function(addr,unsec)
		ex = lib.overflow(addr,unsec)
		
		if typeof(ex) == "computer" then
			computerex(ex)
			
		end if
		
		if typeof(ex) == "shell" then
			shellex(ex)
		end if
		
		
		
	end function
	
	
	for addr in addrs
		
		info = mx.scan_address(lib,addr)
		info = info.remove("decompiling source...").remove("searching unsecure values...")
		info = info[2:]
		
		while info.indexOf("Unsafe check: ") != null or info.indexOf("<b>") != null or info.indexOf("</b>") != null
			info = info.remove("Unsafe check: ").remove("<b>").remove("</b>")
		end while
		
		while info.indexOf("loop in array ") != null
			info = info.replace("loop in array ", "<tag>")
		end while
		
		while info.indexOf("string copy in ") != null
			info = info.replace("string copy in ", "<tag>")
		end while
		
		while info.indexOf("<tag>") != null
			a = info.indexOf("<tag>") + 5
			info = info.remove(info[:a])
			str = info[:info.indexOf(".")]
			exhandler(addr,str)
		end while
		
		//print(info)
		
	end for
	
	
end function





shown =0

menu = function(isStaff)
	
	
	if isStaff == "yes" then
		print("<color=red>[STAFF ACCOUNT]</color>")
	end if
	
	if shown == 0 then
		print("Doom v"+doom_version)
		print("Type 'commands' for commands\n")
		shown = 1
	end if
	cmd = user_input().split(" ")
	
	
	if cmd[0] == "commands" then
		print("hack [ip] - hacks the target")
		print("decipher [hash] - deciphers hash")
		print("hackport [ip] [port] - focus on hacking specific port")
		print("lans [ip] - gets all lans for target ip")
		print("nmap [ip] - Shows open ports on target machine")
		print("download_data - pull a copy of your data from doom's server\n")
		if isStaff == "yes" then
			color("warning","STAFF COMMANDS:")
			print("<color=yellow>*</color>pulldata [user] - View a copy of users data")
			print("<color=yellow>*</color>tor - Bounce your connection through doom's safe servers\n")
		end if
		
	end if
	
	
	if cmd[0] == "hack" then
		
		if cmd.len == 1 then
			print("hack [ip] - hacks target")
			menu
		end if
		
		ip = cmd[1]
		
		c=server.host_computer.File("/Doom/nothackable")
		if not c == null then
		
		co = c.content()
		if not co.indexOf(ip) == null then
			color("warning","Doom will not hack this server\n")
			menu
		end if
		
			
		end if
		
		
		
		r=get_router(ip)
		if r == null then
			print("Invalid IP")	
		end if
		
		for p in r.used_ports
			hack(ip,p.port_number)
		end for
		
		
	end if
	
	if cmd[0] == "decipher" then
		if cmd.len == 1 then
			print("decipher [hash] - deciphers hash")
			menu
		end if
		
		res = cr.decipher("root",cmd[1])
		print(res)
		menu
	end if
	
	
	if cmd[0] == "hackport" then
		if cmd.len == 1 then
			print("hackport [ip] [port] - focus on hacking specific port")
			menu
		end if
		
		ip=cmd[1]
		c=server.host_computer.File("/Doom/nothackable")
		if not c == null then
			
			co = c.content()
			if not co.indexOf(ip) == null then
				color("warning","Doom will not hack this server\n")
				menu
			end if
			
			
			end if
		
		
		

		port=cmd[2].to_int
		r=get_router(ip)
		if r==null then
			print("Invalid IP")
			menu
		end if
		
		hack(ip,port)
		
	end if
	
	
	if cmd[0] == "tor" and isStaff=="yes" then
		
	end if
	
	if cmd[0] == "pulldata" and isStaff=="yes" then
		
		if cmd.len == 1 then
			print("pulldata [user] - Pulls a users data down from the server")
			menu
		end if
		
		for users in server.host_computer.File("/Doom/Users").get_files
			if users.name == cmd[1] then
				print(server.host_computer.File("/Doom/Users/"+cmd[1]).content+"\n")
				break
			end if
		end for
		
	end if
	
	if cmd[0] == "download_data" then
		
		for users in server.host_computer.File("/Doom/Users").get_files
			if users.name == uname then
				print(server.host_computer.File("/Doom/Users/"+uname).content+"\n")	
			end if
			
		end for
		
	end if
	
	
	if cmd[0] == "lans" then
		
		if cmd.len == 1 then
			print("lans [ip] - gets lans of target ip")
			menu
		end if
		
		ip = cmd[1]
		
		c=server.host_computer.File("/Doom/nothackable")
		if not c == null then
			
			co = c.content()
			if not co.indexOf(ip) == null then
				color("warning","Doom will not hack this server\n")
				menu
			end if
			
			
			end if
		
		r=get_router(ip)
		if r==null then
			print("Invalid IP")
			menu
		end if
		
		for lans in r.computers_lan_ip
			print(lans)
		end for
		print("\n")
	end if
	
	if cmd[0] == "nmap" then
		
		ip = cmd[1]
		
		c=server.host_computer.File("/Doom/nothackable")
		if not c == null then
			
			co = c.content()
			if not co.indexOf(ip) == null then
				color("warning","Doom will not hack this server\n")
				menu
			end if
			
			
			end if
		
		r=get_router(ip)
		if r==null then
			print("Invalid IP")
			menu
		end if
		
		for lans in r.computers_lan_ip
			print("\n"+lans+"\n")
			for ports in r.computer_ports(lans)
				print("\n"+r.port_info(ports)+" : "+ports.port_number+"\n")
			end for
		end for
		
		
	end if
	
	menu
end function
mpentered = 0

if said == "login" then
	print("Doom v"+doom_version)
	uname = user_input("username:")
	
	if get_shell.host_computer.lan_ip == "192.168.0.2" or get_shell.host_computer.lan_ip == "192.168.1.2" then
		print("For added security enter the master password too this account")
		mp = user_input("master passowrd:")
		
		for user in server.host_computer.File("/Doom/Users").get_files
			if user.name == uname then
				c = user.content.split(":")
				
				if mp == c[3] then
					color("notify","Correct!")
					mpentered=1
				else
					exit("Account login: failure too provide correct password")
				end if
				
				
			end if
			
		end for
		
		
	end if
	
	
	for user in server.host_computer.File("/Doom/Users").get_files
		if user.name == uname then
			
			sp = user.content.split(":")
			ip = sp[0]
			staff=sp[1]
			blacklisted=sp[2]
			
			if blacklisted == "yes" then
				
				color("warning","This account has been suspended")
				
				if not server.host_computer.File("/Doom/blacklisted") == null then
					
					c=server.host_computer.File("/Doom/blacklisted").content
					if c.indexOf(ip) == null then
						c=c+"\n"+ip
						server.host_computer.File("/Doom/blacklisted").set_content(c)
					end if
					
					
				end if
				
				
				exit()
			end if
			
			
			if get_router.public_ip == ip or mpentered == 1 then
				color("notify","Authentication success!")
				menu(staff)
			end if
			exit("account login failed: failed too verify whitelist")
			
		end if
		
	end for
	
end if
